{-
  TASK 1 - Find branch of the cell tree
  Write the method that will find a branch of the tree by comparing its
  hash with the hash received in the first parameter. When the algorithm finds
  the subtree (branch) whose hash equals the received hash, the root cell of
  this branch should be returned. Return empty cell if the branch is not found.
-}

() recv_internal() {
}

cell solve(int hash, cell tree) asm """
  // Setting the stop at the beginning, just in case no cell will satisfy us
  PUSHNULL
  SWAP

  UNTIL:<{

    // calculating cell hash
    DUP
    HASHCU

    // Comparing hashes
    DEPTH
    DEC
    PICK
    EQUAL
    IFJMP:<{ 1 PUSHINT RET }>

    // loading refs
    CTOS
    DUP
    SREFS
    REPEAT:<{ LDREF }>
    DROP

    DUP
    ISNULL
  }>

  DUP
  ISNULL
  IFJMP:<{ 2DROP NEWC ENDC }>

  1 RETARGS

""";

;; testable
(cell) find_branch_by_hash(int hash, cell tree) method_id {
  return solve(hash, tree);
}
